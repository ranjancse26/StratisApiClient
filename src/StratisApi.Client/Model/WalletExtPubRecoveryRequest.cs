/* 
 * Stratis Node API
 *
 * Access to the Stratis Node's core features.
 *
 * OpenAPI spec version: 1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WalletExtPubRecoveryRequest
    /// </summary>
    [DataContract]
    public partial class WalletExtPubRecoveryRequest :  IEquatable<WalletExtPubRecoveryRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WalletExtPubRecoveryRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WalletExtPubRecoveryRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WalletExtPubRecoveryRequest" /> class.
        /// </summary>
        /// <param name="extPubKey">extPubKey (required).</param>
        /// <param name="accountIndex">accountIndex (required).</param>
        /// <param name="name">name (required).</param>
        /// <param name="creationDate">creationDate.</param>
        public WalletExtPubRecoveryRequest(string extPubKey = default(string), int? accountIndex = default(int?), string name = default(string), DateTime? creationDate = default(DateTime?))
        {
            // to ensure "extPubKey" is required (not null)
            if (extPubKey == null)
            {
                throw new InvalidDataException("extPubKey is a required property for WalletExtPubRecoveryRequest and cannot be null");
            }
            else
            {
                this.ExtPubKey = extPubKey;
            }
            // to ensure "accountIndex" is required (not null)
            if (accountIndex == null)
            {
                throw new InvalidDataException("accountIndex is a required property for WalletExtPubRecoveryRequest and cannot be null");
            }
            else
            {
                this.AccountIndex = accountIndex;
            }
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new InvalidDataException("name is a required property for WalletExtPubRecoveryRequest and cannot be null");
            }
            else
            {
                this.Name = name;
            }
            this.CreationDate = creationDate;
        }
        
        /// <summary>
        /// Gets or Sets ExtPubKey
        /// </summary>
        [DataMember(Name="extPubKey", EmitDefaultValue=false)]
        public string ExtPubKey { get; set; }

        /// <summary>
        /// Gets or Sets AccountIndex
        /// </summary>
        [DataMember(Name="accountIndex", EmitDefaultValue=false)]
        public int? AccountIndex { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets CreationDate
        /// </summary>
        [DataMember(Name="creationDate", EmitDefaultValue=false)]
        public DateTime? CreationDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WalletExtPubRecoveryRequest {\n");
            sb.Append("  ExtPubKey: ").Append(ExtPubKey).Append("\n");
            sb.Append("  AccountIndex: ").Append(AccountIndex).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  CreationDate: ").Append(CreationDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WalletExtPubRecoveryRequest);
        }

        /// <summary>
        /// Returns true if WalletExtPubRecoveryRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of WalletExtPubRecoveryRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WalletExtPubRecoveryRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ExtPubKey == input.ExtPubKey ||
                    (this.ExtPubKey != null &&
                    this.ExtPubKey.Equals(input.ExtPubKey))
                ) && 
                (
                    this.AccountIndex == input.AccountIndex ||
                    (this.AccountIndex != null &&
                    this.AccountIndex.Equals(input.AccountIndex))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.CreationDate == input.CreationDate ||
                    (this.CreationDate != null &&
                    this.CreationDate.Equals(input.CreationDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ExtPubKey != null)
                    hashCode = hashCode * 59 + this.ExtPubKey.GetHashCode();
                if (this.AccountIndex != null)
                    hashCode = hashCode * 59 + this.AccountIndex.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.CreationDate != null)
                    hashCode = hashCode * 59 + this.CreationDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
