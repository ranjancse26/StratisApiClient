/* 
 * Stratis Node API
 *
 * Access to the Stratis Node's core features.
 *
 * OpenAPI spec version: 1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing NodeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class NodeApiTests
    {
        private NodeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new NodeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of NodeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' NodeApi
            //Assert.IsInstanceOfType(typeof(NodeApi), instance, "instance is a NodeApi");
        }

        
        /// <summary>
        /// Test DecodeRawTransaction
        /// </summary>
        [Test]
        public void DecodeRawTransactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DecodeRawTransactionModel request = null;
            //instance.DecodeRawTransaction(request);
            
        }
        
        /// <summary>
        /// Test GetAsyncLoops
        /// </summary>
        [Test]
        public void GetAsyncLoopsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAsyncLoops();
            
        }
        
        /// <summary>
        /// Test GetBlockHeader
        /// </summary>
        [Test]
        public void GetBlockHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string hash = null;
            //bool? isJsonFormat = null;
            //instance.GetBlockHeader(hash, isJsonFormat);
            
        }
        
        /// <summary>
        /// Test GetLogRules
        /// </summary>
        [Test]
        public void GetLogRulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetLogRules();
            
        }
        
        /// <summary>
        /// Test GetRawTransactionAsync
        /// </summary>
        [Test]
        public void GetRawTransactionAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trxid = null;
            //bool? verbose = null;
            //instance.GetRawTransactionAsync(trxid, verbose);
            
        }
        
        /// <summary>
        /// Test GetTxOutAsync
        /// </summary>
        [Test]
        public void GetTxOutAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trxid = null;
            //int? vout = null;
            //bool? includeMemPool = null;
            //instance.GetTxOutAsync(trxid, vout, includeMemPool);
            
        }
        
        /// <summary>
        /// Test Shutdown
        /// </summary>
        [Test]
        public void ShutdownTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? corsProtection = null;
            //instance.Shutdown(corsProtection);
            
        }
        
        /// <summary>
        /// Test Shutdown_0
        /// </summary>
        [Test]
        public void Shutdown_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? corsProtection = null;
            //instance.Shutdown_0(corsProtection);
            
        }
        
        /// <summary>
        /// Test Status
        /// </summary>
        [Test]
        public void StatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.Status();
            
        }
        
        /// <summary>
        /// Test UpdateLogLevel
        /// </summary>
        [Test]
        public void UpdateLogLevelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LogRulesRequest request = null;
            //instance.UpdateLogLevel(request);
            
        }
        
        /// <summary>
        /// Test ValidateAddress
        /// </summary>
        [Test]
        public void ValidateAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //instance.ValidateAddress(address);
            
        }
        
    }

}
